{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Desktop/facultate sem4/ISS/frontend/src/components/programmer-page/programmerPage.js\",\n  _s = $RefreshSig$();\nimport \"./programmerPage.css\";\nimport { useEffect, useState } from \"react\";\nimport Bug from \"../tester-page/components/bug-component/Bug\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst computeUri = isUnresolvedBugs => {\n  if (isUnresolvedBugs) {\n    return \"http://localhost:8080/api/v1/bugs?status=UNSOLVED\";\n  } else return `http://localhost:8080/api/v1/bugs`;\n};\nconst ProgrammerPage = () => {\n  _s();\n  const token = \"Bearer \" + sessionStorage.getItem(\"authToken\");\n  const [unresolvedBugs, setUnresolvedBugs] = useState(null);\n  const [assignedBugs, setAssignedBugs] = useState(null);\n  const assignBugToProgrammer = () => {};\n  const getAllBugs = async function () {\n    let isUnresolvedBugs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    const uri = computeUri(isUnresolvedBugs);\n    const response = await fetch(uri, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    });\n    if (response.status === 200) {\n      const data = await response.json();\n      console.log(data);\n      return data;\n    }\n    return null;\n  };\n  useEffect(() => {\n    async function fetchUnresolvedBugs() {\n      const bugsFromResponse = await getAllBugs();\n      if (bugsFromResponse !== null) {\n        setUnresolvedBugs(bugsFromResponse);\n      }\n    }\n    async function fetchAssignedBugs() {\n      const bugsFromResponse = await getAllBugs(false);\n      if (bugsFromResponse !== null) {\n        setAssignedBugs(bugsFromResponse);\n      }\n    }\n    fetchUnresolvedBugs();\n    fetchAssignedBugs();\n    const interval = setInterval(async () => {\n      await fetchUnresolvedBugs();\n      await fetchAssignedBugs();\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"programmer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bugs-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bugs-container\",\n        children: unresolvedBugs && unresolvedBugs.map(bug => /*#__PURE__*/_jsxDEV(Bug, {\n          id: bug.id,\n          bugName: bug.name,\n          description: bug.description,\n          priority: bug.priority,\n          status: bug.status,\n          postDate: bug.postDate,\n          buttonOnClick: assignBugToProgrammer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bugs-container\",\n        children: assignedBugs && assignedBugs.map(bug => /*#__PURE__*/_jsxDEV(Bug, {\n          id: bug.id,\n          bugName: bug.name,\n          description: bug.description,\n          priority: bug.priority,\n          status: bug.status,\n          postDate: bug.postDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n};\n_s(ProgrammerPage, \"FVi8TBnY5lUy1QKOhIEIQbQSM58=\");\n_c = ProgrammerPage;\nexport default ProgrammerPage;\nvar _c;\n$RefreshReg$(_c, \"ProgrammerPage\");","map":{"version":3,"names":["useEffect","useState","Bug","jsxDEV","_jsxDEV","computeUri","isUnresolvedBugs","ProgrammerPage","_s","token","sessionStorage","getItem","unresolvedBugs","setUnresolvedBugs","assignedBugs","setAssignedBugs","assignBugToProgrammer","getAllBugs","arguments","length","undefined","uri","response","fetch","method","headers","status","data","json","console","log","fetchUnresolvedBugs","bugsFromResponse","fetchAssignedBugs","interval","setInterval","clearInterval","id","children","className","map","bug","bugName","name","description","priority","postDate","buttonOnClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andrei/Desktop/facultate sem4/ISS/frontend/src/components/programmer-page/programmerPage.js"],"sourcesContent":["import \"./programmerPage.css\"\nimport {useEffect, useState} from \"react\";\nimport Bug from \"../tester-page/components/bug-component/Bug\";\n\nconst computeUri = (isUnresolvedBugs) => {\n    if (isUnresolvedBugs) {\n        return \"http://localhost:8080/api/v1/bugs?status=UNSOLVED\"\n    } else return `http://localhost:8080/api/v1/bugs`\n}\n\nconst ProgrammerPage = () => {\n    const token = \"Bearer \" + sessionStorage.getItem(\"authToken\")\n    const [unresolvedBugs, setUnresolvedBugs] = useState(null)\n    const [assignedBugs, setAssignedBugs] = useState(null)\n\n\n    const assignBugToProgrammer = () => {\n\n    }\n\n    const getAllBugs = async (isUnresolvedBugs = true) => {\n        const uri = computeUri(isUnresolvedBugs)\n\n        const response = await fetch(uri,\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": token\n                }\n            })\n\n        if (response.status === 200) {\n            const data = await response.json()\n            console.log(data)\n            return data\n        }\n        return null\n    }\n\n    useEffect(() => {\n        async function fetchUnresolvedBugs() {\n            const bugsFromResponse = await getAllBugs()\n            if (bugsFromResponse !== null) {\n                setUnresolvedBugs(bugsFromResponse)\n            }\n        }\n\n        async function fetchAssignedBugs() {\n            const bugsFromResponse = await getAllBugs(false)\n            if (bugsFromResponse !== null) {\n                setAssignedBugs(bugsFromResponse)\n            }\n        }\n\n        fetchUnresolvedBugs()\n        fetchAssignedBugs()\n\n        const interval = setInterval(async () => {\n            await fetchUnresolvedBugs()\n            await fetchAssignedBugs()\n\n        }, 3000)\n        return () => clearInterval(interval)\n\n    }, [])\n\n    return <div id={\"programmer-container\"}>\n        <div id={\"bugs-view\"}>\n            <div className={\"bugs-container\"}>\n                {unresolvedBugs && unresolvedBugs.map(bug =>\n                    <Bug id={bug.id} bugName={bug.name} description={bug.description}\n                         priority={bug.priority}\n                         status={bug.status}\n                         postDate={bug.postDate}\n                         buttonOnClick={assignBugToProgrammer}\n                    >\n\n                    </Bug>\n                )}\n            </div>\n            <div className={\"bugs-container\"}>\n                {assignedBugs && assignedBugs.map(bug =>\n                    <Bug id={bug.id} bugName={bug.name} description={bug.description}\n                         priority={bug.priority}\n                         status={bug.status} postDate={bug.postDate}>\n\n                    </Bug>\n                )}\n            </div>\n        </div>\n\n    </div>\n}\n\nexport default ProgrammerPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}