{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Desktop/facultate sem4/ISS/frontend/src/components/programmer-page/programmerPage.js\",\n  _s = $RefreshSig$();\nimport \"./programmerPage.css\";\nimport { useEffect, useState } from \"react\";\nimport Bug from \"../tester-page/components/bug-component/Bug\";\nimport BugForm from \"../tester-page/components/bug-component/add-bug-component/BugForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgrammerPage = () => {\n  _s();\n  const token = \"Bearer \" + sessionStorage.getItem(\"authToken\");\n  const [unresolvedBugs, setUnresolvedBugs] = useState(null);\n  const getAllBugs = async function () {\n    let userId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let uri = \"\";\n    if (userId === null) {\n      uri = \"http://localhost:8080/api/v1/bugs?status=UNSOLVED\";\n    } else {\n      uri = \"http://localhost:8080/api/v1/bugs\";\n    }\n    const response = await fetch(uri, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": token\n      }\n    });\n    if (response.status === 200) {\n      const data = await response.json();\n      console.log(data);\n      return data;\n    }\n    return null;\n  };\n  useEffect(() => {\n    async function fetchUnresolvedBugs() {\n      const bugsFromResponse = await getAllBugs(2);\n      if (bugsFromResponse !== null) {\n        setUnresolvedBugs(bugsFromResponse);\n      }\n    }\n    fetchUnresolvedBugs();\n    const interval = setInterval(async () => {\n      await fetchUnresolvedBugs();\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"programmer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"bugs-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"unsolved-bugs-container\",\n        children: unresolvedBugs && unresolvedBugs.map(bug => /*#__PURE__*/_jsxDEV(Bug, {\n          id: bug.id,\n          bugName: bug.name,\n          description: bug.description,\n          priority: bug.priority,\n          status: bug.status,\n          postDate: bug.postDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"sa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n};\n_s(ProgrammerPage, \"C2c/Z9RJW+aR/DgGtqAhTHmiHU4=\");\n_c = ProgrammerPage;\nexport default ProgrammerPage;\nvar _c;\n$RefreshReg$(_c, \"ProgrammerPage\");","map":{"version":3,"names":["useEffect","useState","Bug","BugForm","jsxDEV","_jsxDEV","ProgrammerPage","_s","token","sessionStorage","getItem","unresolvedBugs","setUnresolvedBugs","getAllBugs","userId","arguments","length","undefined","uri","response","fetch","method","headers","status","data","json","console","log","fetchUnresolvedBugs","bugsFromResponse","interval","setInterval","clearInterval","id","children","map","bug","bugName","name","description","priority","postDate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/andrei/Desktop/facultate sem4/ISS/frontend/src/components/programmer-page/programmerPage.js"],"sourcesContent":["import \"./programmerPage.css\"\nimport {useEffect, useState} from \"react\";\nimport Bug from \"../tester-page/components/bug-component/Bug\";\nimport BugForm from \"../tester-page/components/bug-component/add-bug-component/BugForm\";\n\nconst ProgrammerPage = () => {\n    const token = \"Bearer \" + sessionStorage.getItem(\"authToken\")\n    const [unresolvedBugs, setUnresolvedBugs] = useState(null)\n\n    const getAllBugs = async (userId = null) => {\n        let uri = \"\"\n        if (userId === null) {\n            uri = \"http://localhost:8080/api/v1/bugs?status=UNSOLVED\"\n        }\n        else{\n            uri = \"http://localhost:8080/api/v1/bugs\"\n        }\n        const response = await fetch(uri,\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": token\n                }\n            })\n        if (response.status === 200) {\n            const data = await response.json()\n            console.log(data)\n            return data\n        }\n        return null\n    }\n\n    useEffect(() => {\n        async function fetchUnresolvedBugs() {\n            const bugsFromResponse = await getAllBugs(2)\n            if (bugsFromResponse !== null) {\n                setUnresolvedBugs(bugsFromResponse)\n            }\n        }\n\n        fetchUnresolvedBugs()\n\n        const interval = setInterval(async () => {\n            await fetchUnresolvedBugs()\n        }, 3000)\n        return () => clearInterval(interval)\n\n    }, [])\n\n    return <div id={\"programmer-container\"}>\n        <div id={\"bugs-container\"}>\n            <div id={\"unsolved-bugs-container\"}>\n                {unresolvedBugs && unresolvedBugs.map(bug =>\n                    <Bug id={bug.id} bugName={bug.name} description={bug.description}\n                         priority={bug.priority}\n                         status={bug.status} postDate={bug.postDate}>\n\n                    </Bug>\n                )}\n            </div>\n            <div>\n                sa\n            </div>\n        </div>\n\n    </div>\n}\n\nexport default ProgrammerPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}